function newResponse(question, answer, response, displayQuestion) {let respTypes = ['list', 'embedLink', 'link', 'par', 'linkList'];if(typeof question == 'object') {console.warn('object is being used');const quest = question[0];const answ = question[1];const respo = question[2];const display = question[3];var notResp = 0;for (i=0; i < respTypes.length;i++) {if(question[2] == respTypes[i]) {var type = i;renderResult(type, answ, quest, display);}else{notResp=notResp+1;}}if(notResp == respTypes.length) {console.error('Invalid response type')}}else if(typeof question != 'string' && typeof response!='string'){console.error('Question/response needs to be a string or object');} else {let respTypes = ['list', 'embedLink', 'link', 'par', 'linkList'];var notResp = 0;for (i=0; i < respTypes.length;i++){if(response == respTypes[i]) {var type = i;renderResult(type, answer, question, displayQuestion);}else{notResp=notResp+1}}if(notResp==respTypes.length){console.error('Invalid response type')}}}function renderResult(type, answer, quest, display){let list = document.createElement('ul');let link = document.createElement('a');let par = document.createElement('p');let container = document.getElementById('container');if(display==true){const question = document.createElement('p');const questContent = document.createTextNode(quest);question.appendChild(questContent);container.appendChild(question);}switch(type){case 0:if(typeof answer == 'object'){for(i=0; i < answer.length; i++){const listItem = document.createElement('li');const listContent = document.createTextNode(answer[i]);listItem.appendChild(listContent);list.appendChild(listItem);}}else{const listItem = document.createElement('li');const listContent = document.createTextNode(answer);listItem.appendChild(listContent);list.appendChild(listItem);}container.appendChild(list);break;case 1:if(answer.length>3) {console.error('Invalid answer length, linkembed format:"question, [text, linkname, link]"')}else{const text = document.createTextNode(answer[0]);const linkName = document.createTextNode(answer[1]);link.appendChild(linkName);link.setAttribute('href', answer[2]);par.appendChild(text);par.appendChild(link);container.appendChild(par);}break;case 2:const linkName = document.createTextNode(answer[0]);link.appendChild(linkName);link.setAttribute('href', answer[1]);container.appendChild(link);break;case 3:if(typeof answer == 'object'){if(answer.length==1){const text = document.createTextNode(answer[0]);par.appendChild(text);container.appendChild(par);}else{console.error('Type: "par"; requires only one argument');}}else{const text = document.createTextNode(answer);par.appendChild(text);container.appendChild(par);}break;case 4:let hrefs = [];let item = document.getElementsByClassName('list-item');for(i=0;i<answer.length;i++){if(i%2==0){const listItem = document.createElement('li');const listlink = document.createElement('a');const linkContent = document.createTextNode(answer[i]);listlink.appendChild(linkContent);listlink.setAttribute('class', 'list-item');listItem.appendChild(listlink);list.appendChild(listItem);}else{hrefs.push(i);}}container.appendChild(list);for (x=0; x < hrefs.length;x++) {document.getElementsByClassName('list-item')[x].setAttribute('href', answer[hrefs[x]]);}break;}}